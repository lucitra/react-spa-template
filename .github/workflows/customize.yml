name: Customize Template

on:
  workflow_dispatch:
    inputs:
      author_name:
        description: 'Your name'
        required: true
        type: string
      author_email:
        description: 'Your email'
        required: true
        type: string
      original_owner:
        description: 'Original template owner (default: lucitra)'
        required: false
        type: string
        default: ''

jobs:
  customize:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Customize
        run: |
          # Use provided original owner or default to lucitra
          ORIGINAL_OWNER="${{ inputs.original_owner }}"
          if [ -z "$ORIGINAL_OWNER" ]; then
            ORIGINAL_OWNER="lucitra"
          fi
          
          # Update package.json
          sed -i "s/Your Name/${{ inputs.author_name }}/g" package.json
          sed -i "s/your.email@example.com/${{ inputs.author_email }}/g" package.json
          sed -i "s/${ORIGINAL_OWNER}/${{ github.repository_owner }}/g" package.json README.md
          sed -i "s/react-spa-template/${{ github.event.repository.name }}/g" package.json README.md
          
          # Update vite.config.js for GitHub Pages
          sed -i "s/react-spa-template/${{ github.event.repository.name }}/g" vite.config.js
          
          # Update LICENSE
          sed -i "s/React SPA Template Contributors/${{ inputs.author_name }}/g" LICENSE
          
          # Create .env from example
          cp .env.example .env
      
      - name: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "Customize template for ${{ inputs.author_name }}"
          git push
      
      - name: Close setup reminder issue
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'setup-reminder'
            });
            
            for (const issue of issues) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `ðŸŽ‰ **Template customized successfully!**\n\nâœ… The following settings have been updated:\n- **Author**: ${{ inputs.author_name }}\n- **Email**: ${{ inputs.author_email }}\n- **Repository**: ${context.repo.owner}/${context.repo.repo}\n- **License**: Copyright updated to ${{ inputs.author_name }}\n- **Environment**: .env file created from template\n\nYour React SPA template is now ready! Happy coding! ðŸš€`
              });
              
              console.log(`Closed setup reminder issue #${issue.number}`);
            }